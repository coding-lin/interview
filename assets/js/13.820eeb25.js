(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{427:function(t,e,l){"use strict";l.r(e);var v=l(1),a=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"babel-的工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#babel-的工作流程"}},[t._v("#")]),t._v(" Babel 的工作流程")]),t._v(" "),e("ul",[e("li",[t._v("解析")])]),t._v(" "),e("p",[t._v("将代码解析成抽象语法树(AST)，解析过程中有两个阶段："),e("strong",[t._v("词法分析")]),t._v("和"),e("strong",[t._v("语法分析")]),t._v("，词法分析阶段把字符串形式的代码转换为令牌(tokens)流，令牌类似于 AST 中的节点；而语法分析阶段则会把一个令牌流转换成 AST 的形式，同时这个阶段会把令牌中的信息转换成 AST 的表述结构。")]),t._v(" "),e("ul",[e("li",[t._v("转换")])]),t._v(" "),e("p",[t._v("在这个阶段，Babel 接受得到 AST 并通过 "),e("code",[t._v("babel-traverse")]),t._v(" 对其进行深度优先遍历，在此过程中对节点进行添加、更新及移除操作。这部分也是 Babel 插件介入工作的部分。")]),t._v(" "),e("ul",[e("li",[t._v("生成")])]),t._v(" "),e("p",[t._v("将经过转换的 AST 通过 "),e("code",[t._v("babel-generator")]),t._v(" 再转换成 js 代码，过程就是深度优先遍历整个 AST，然后构建可以表示转换后代码的字符串。")])])}),[],!1,null,null,null);e.default=a.exports}}]);